/**
*Given an array of ints, return a new array length 2 containing the first and last elements from the original array. 
*The original array will be length 1 or more.
 */
 
public int[] makeEnds(int[] nums) {
  int[] newArray = new int[2];
  newArray[0] = nums[0];
  newArray[1] = nums[nums.length-1];
  
  return newArray;

}


/**
*Array-1 middleWay
*Given 2 int arrays, a and b, each length 3, return a new array length 2 containing their middle elements.
*/
public int[] middleWay(int[] a, int[] b) {
   int[] newArray = new int[2];
  
   newArray[0] = a[a.length-2];
   newArray[1] = b[b.length-2];
   
    return newArray;
}
/**
*Array-1  has23 
*Given an int array length 2, return true if it contains a 2 or a 3.
*/
public boolean has23(int[] nums) {
    for(int i = 0; i < nums.length; i++) {
     if(nums[i] == 2 || nums[i] == 3) return true;
   }
   return false;
}
